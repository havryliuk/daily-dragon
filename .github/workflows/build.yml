name: Build Daily Dragon
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.13
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: pytest --cov=.
  deploy-layer-and-update-lambda:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.13
      - run: pwd
      - run: rm -rf python
      - name: Install dependencies
        run: pip install --target python -r requirements.txt
      - name: Copy API code
        run: cp -r daily_dragon python/
      - run: zip -r9q daily_dragon_layer.zip python/
      - run: ls -lsh
      - uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Check AWS credentials
        run: aws sts get-caller-identity
      - run: aws s3 cp daily_dragon_layer.zip s3://daily-dragon-layer/daily_dragon_layer.zip
      - name: Publish new layer version
        id: publish_layer
        run: |
          NEW_LAYER_ARN=$(aws lambda publish-layer-version \
            --layer-name daily-dragon-libraries \
            --content S3Bucket=daily-dragon-layer,S3Key=daily_dragon_layer.zip \
            --compatible-runtimes python3.13 \
            --query 'LayerVersionArn' --output text)
          echo "Published new layer version: $NEW_LAYER_ARN"
          echo "layer_arn=$NEW_LAYER_ARN" >> $GITHUB_ENV
      - name: Update Lambda function configuration with new layer
        run: |
          aws lambda update-function-configuration \
          --function-name daily-dragon \
          --layers $layer_arn
