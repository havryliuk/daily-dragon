Description: Daily Dragon Stack

Resources:
  DailyDragonLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DailyDragonLambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::daily-dragon-bucket/*"
              - Effect: Allow
                Action:
                  - "lambda:GetLayerVersion"
                Resource: "arn:aws:lambda:*:*:layer:*"

  DailyDragonAPIGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: daily-dragon-api
      ProtocolType: HTTP

  DailyDragonLambda:
    Type: AWS::Lambda::Function
    Properties:
      Role:
        !GetAtt DailyDragonLambdaExecutionRole.Arn
      Code:
        S3Bucket: "daily-dragon-bucket"
        S3Key: "daily-dragon.zip"
      Handler: daily_dragon_handler.lambda_handler
      Runtime: python3.12

  DailyDragonLambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref DailyDragonAPIGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: arn:aws:apigateway:region:lambda:path/2015-03-31/functions/arn:aws:lambda:region:account-id:function:DailyDragonLambda/invocations
      PayloadFormatVersion: '2.0'

  DailyDragonApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref DailyDragonAPIGateway
      RouteKey: 'ANY /{proxy+}'
      Target: !Sub 'integrations/${DailyDragonLambdaIntegration}'

    DailyDragonApiDeployment:
      Type: AWS::ApiGatewayV2::Deployment
      Properties:
        ApiId: !Ref DailyDragonAPIGateway

    DailyDragonApiStage:
      Type: AWS::ApiGatewayV2::Stage
      Properties:
        ApiId: !Ref DailyDragonAPIGateway
        AutoDeploy: true
        StageName: dev

Outputs:
  ApiGatewayInvokeURL:
    Description: "Invoke URL for the API Gateway"
    Value: !Sub "https://${DailyDragonAPIGateway}.execute-api.${AWS::Region}.amazonaws.com/dev/"
      